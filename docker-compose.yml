#version: '3'

#services:
#app:
#  build: ./web
#  ports:
#   - "8000:5000"
#  links:
#   - cassandra
#  volumes:
#    - ./web:/web
#  command: python /web/app/main.py
#
#
cron:
  build: ./cron
  volumes:
    - ./cron:/cron
  links:
    - kafka
  command: python /cron/app/main.py
zookeeper:
  image: wurstmeister/zookeeper
  ports:
    - "2181:2181"
kafka:
  image: wurstmeister/kafka
  ports:
    - "9092:9092"
  links:
    - zookeeper
  environment:
    KAFKA_ADVERTISED_HOST_NAME: "172.17.0.1" # docker-machine ssh dev; ifconfig docker0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}')
    KAFKA_ADVERTISED_PORT: "9092"
    KAFKA_BROKER_ID: 1
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_CREATE_TOPICS: "test:1:1"
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
#cassandra:
#  image: cassandra
#  ports:
#    - '9042:9042'
#    - '9160:9160'
#  expose:
#     - "9042"
#  environment:
#    CASSANDRA_LISTEN_ADDRESS: ''
#    CASSANDRA_BROADCAST_ADDRESS: '192.168.99.100'
#  restart: always
stream:
  build: ./spark
  ports:
    - 8888:8888
  volumes:
    - ./spark/work:/home/jovyan/work
  command: "python /home/jovyan/work/streaming.py"
  links:
    #- cassandra
    - kafka




#version: '3'
#
#
#services:
#  app:
#    build: ./web
#    ports:
#      - "80:80"
#    expose:
#      - "80"
#    links:
#      - cassandra
#    volumes:
#      - ./web/app:/app
##    networks:
##      - weather
#  cassandra:
#    image: cassandra
#    ports:
#      - '9042:9042'
#      - '9160:9160'
#    expose:
#      - "9042"
##    environment:
##      CASSANDRA_LISTEN_ADDRESS: '192.168.99.100'
##      CASSANDRA_BROADCAST_ADDRESS: '192.168.99.100'
###      CQLSH_NO_BUNDLED: 1
##    restart: always
##      CASSANDRA_SEEDS: localhost
###    volumes:
###      - /data/cassandra:/var/lib/cassandra
##    networks:
##      - weather
##
#
###
##  app:
##    depends_on:
##      - cassandra
###      - kafka
##    build: ./web
##    #restart: always
##    ports:
##      - "80:80"
##    links:
##      - cassandra
##
##    volumes:
##      - ./web/app:/app
##    #networks:
##    #  - weather
#
##volumes:
##  kafka-data:
##  kafka-logs:
##  spark:
##    image: jupyter/pyspark-notebook
##    depends_on:
##      - cassandra
##      - kafka
#
#networks:
#  weather:
#    driver: bridge
#
#