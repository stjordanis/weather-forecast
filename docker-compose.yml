version: '3'


services:
  app:
    build: ./web
    depends_on:
      - cassandra
    ports:
      - "80:80"
    links:
      - cassandra
    volumes:
      - ./web/app:/app
  cassandra:
    image: cassandra:2.2.0
    ports:
      - '9042:9042'
#      - '9160:9160'
#      - '7000:7000'
#      - '7001:7001'
##    restart: always
#    environment:
      #CASSANDRA_BROADCAST_ADDRESS: '172.22.0.2'
#
##      CASSANDRA_SEEDS: localhost
##    volumes:
##      - /data/cassandra:/var/lib/cassandra
##    networks:
##      - weather
#
#
##  zookeeper:
##    image: wurstmeister/zookeeper
##    ports:
##      - "2181:2181"
##  kafka:
##    image: ches/kafka
##    depends_on:
##      - zookeeper
##    environment:
##      # Use container hostname support of the default Compose network
##      ZOOKEEPER_IP: zookeeper
##    ports:
##      - '9092:9092'  # Kafka broker
##      - '7203:7203'  # JMX
##    volumes:
##      - kafka-data:/data
##      - kafka-logs:/logs
##
##  zookeeper:
##    image: zookeeper:3.4
##    restart: unless-stopped
##    ports:
##      - '2181:2181'
###
##  app:
##    depends_on:
##      - cassandra
###      - kafka
##    build: ./web
##    #restart: always
##    ports:
##      - "80:80"
##    links:
##      - cassandra
##
##    volumes:
##      - ./web/app:/app
##    #networks:
##    #  - weather
#
##volumes:
##  kafka-data:
##  kafka-logs:
##  spark:
##    image: jupyter/pyspark-notebook
##    depends_on:
##      - cassandra
##      - kafka
#
##networks:
##  weather:
##    driver: bridge
#
#
