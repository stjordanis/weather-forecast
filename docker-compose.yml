#version: '3'

#services:
#app:
#  build: ./web
#  ports:
#   - "8000:5000"
#  links:
#   - cassandra
#  volumes:
#    - ./web:/web
#  command: python /web/app/main.py
#
#cassandra:
#  image: cassandra

cron:
  build: ./cron
  volumes:
    - ./cron:/cron
  command: python /cron/app/main.py



#version: '3'
#
#
#services:
#  app:
#    build: ./web
#    ports:
#      - "80:80"
#    expose:
#      - "80"
#    links:
#      - cassandra
#    volumes:
#      - ./web/app:/app
##    networks:
##      - weather
#  cassandra:
#    image: cassandra
#    ports:
#      - '9042:9042'
#      - '9160:9160'
#    expose:
#      - "9042"
##    environment:
##      CASSANDRA_LISTEN_ADDRESS: '192.168.99.100'
##      CASSANDRA_BROADCAST_ADDRESS: '192.168.99.100'
###      CQLSH_NO_BUNDLED: 1
##    restart: always
##      CASSANDRA_SEEDS: localhost
###    volumes:
###      - /data/cassandra:/var/lib/cassandra
##    networks:
##      - weather
##
#
##  zookeeper:
##    image: wurstmeister/zookeeper
##    ports:
##      - "2181:2181"
##  kafka:
##    image: ches/kafka
##    depends_on:
##      - zookeeper
##    environment:
##      # Use container hostname support of the default Compose network
##      ZOOKEEPER_IP: zookeeper
##    ports:
##      - '9092:9092'  # Kafka broker
##      - '7203:7203'  # JMX
##    volumes:
##      - kafka-data:/data
##      - kafka-logs:/logs
##
##  zookeeper:
##    image: zookeeper:3.4
##    restart: unless-stopped
##    ports:
##      - '2181:2181'
###
##  app:
##    depends_on:
##      - cassandra
###      - kafka
##    build: ./web
##    #restart: always
##    ports:
##      - "80:80"
##    links:
##      - cassandra
##
##    volumes:
##      - ./web/app:/app
##    #networks:
##    #  - weather
#
##volumes:
##  kafka-data:
##  kafka-logs:
##  spark:
##    image: jupyter/pyspark-notebook
##    depends_on:
##      - cassandra
##      - kafka
#
##networks:
##  weather:
##    driver: bridge
##
##