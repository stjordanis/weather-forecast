app:
 build: ./web
 ports:
  - "8000:5000"
 links:
  - cassandra
  #- kafka
 volumes:
   - ./web:/web
   - ./shared:/web/app/shared
 command: python /web/app/app.py

#
# cron:
#  build: ./cron
#  volumes:
#    - ./cron:/cron
#    - ./shared:/cron/app/shared
#  links:
#    - kafka
#  env_file:
#    - .env
#  environment:
#    - WEATHER_API_TOKEN=${WEATHER_API_TOKEN}
#  command: python /cron/app/main.py

zookeeper:
 image: wurstmeister/zookeeper
 ports:
   - "2181:2181"

kafka:
 image: wurstmeister/kafka
 ports:
   - "9092:9092"
 links:
   - zookeeper
 environment:
   KAFKA_ADVERTISED_HOST_NAME: "172.17.0.1" # docker-machine ssh dev; ifconfig docker0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}')
   KAFKA_ADVERTISED_PORT: "9092"
   KAFKA_BROKER_ID: 1
   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
   KAFKA_CREATE_TOPICS: "streaming:1:1,batch:1:1"

cassandra:
 build: ./cassandra
 ports:
   - '9042:9042'
   - '9160:9160'
 expose:
    - "9042"
 environment:
   CASSANDRA_LISTEN_ADDRESS: ''
   CASSANDRA_BROADCAST_ADDRESS: '192.168.99.100'
 restart: always
 volumes:
   - ./data/cassandra:/var/lib/cassandra

# streaming:
#   build: ./streaming
#   volumes:
#     - ./shared:/app/shared
#     - ./streaming/streaming.py:/app/streaming.py
#   links:
#     - cassandra
#     - kafka
#   command: python app/streaming.py

batch:
  build: ./batch
  volumes:
    - ./shared:/app/shared
    - ./batch/batch.py:/app/batch.py
  links:
    - cassandra
    - kafka
  command: python app/batch.py

# spark:
#   image: jupyter/pyspark-notebook
#   environment:
#     - CASSANDRA_PORT=9042
#     - CQL_VERSION=3.4.4
#     - CASSANDRA_HOST=localhost
#   volumes:
#     - ./spark/work:/home/jovyan/work
#   links:
#     - cassandra
